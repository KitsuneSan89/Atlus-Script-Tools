//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Paul\source\repos\Atlus-Script-Tools\Source\AtlusScriptLibrary\FlowScriptLanguage\Compiler\Parser\Grammar\FlowScript.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser.Grammar {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public partial class FlowScriptLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, Import=33, Function=34, Global=35, Const=36, AiLocal=37, AiGlobal=38, 
		Bit=39, Enum=40, Out=41, Local=42, Count=43, If=44, Else=45, For=46, While=47, 
		Break=48, Continue=49, Return=50, Goto=51, Switch=52, Case=53, Default=54, 
		BoolLiteral=55, IntLiteral=56, FloatLiteral=57, StringLiteral=58, TypeIdentifier=59, 
		PrimitiveTypeIdentifier=60, Identifier=61, Whitespace=62, Newline=63, 
		BlockComment=64, LineComment=65;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "Import", 
		"Function", "Global", "Const", "AiLocal", "AiGlobal", "Bit", "Enum", "Out", 
		"Local", "Count", "If", "Else", "For", "While", "Break", "Continue", "Return", 
		"Goto", "Switch", "Case", "Default", "BoolLiteral", "True", "False", "IdentifierEscape", 
		"IntLiteral", "DecIntLiteral", "HexIntLiteral", "FloatLiteral", "FloatLiteralSuffix", 
		"FloatLiteralExponent", "StringLiteral", "StringEscapeSequence", "StringDecimalEscape", 
		"StringHexEscape", "TypeIdentifier", "PrimitiveTypeIdentifier", "Identifier", 
		"Letter", "Digit", "HexDigit", "HexLiteralPrefix", "Sign", "Whitespace", 
		"Newline", "BlockComment", "LineComment"
	};


	public FlowScriptLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public FlowScriptLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'('", "')'", "';'", "'{'", "'}'", "'='", "'['", "']'", "','", "':'", 
		"'.'", "'--'", "'++'", "'!'", "'-'", "'*'", "'/'", "'%'", "'+'", "'<'", 
		"'>'", "'<='", "'>='", "'=='", "'!='", "'&&'", "'||'", "'+='", "'-='", 
		"'*='", "'/='", "'%='", "'import'", "'function'", "'global'", "'const'", 
		"'ai_local'", "'ai_global'", "'bit'", "'enum'", "'out'", "'local'", "'count'", 
		"'if'", "'else'", "'for'", "'while'", "'break'", "'continue'", "'return'", 
		"'goto'", "'switch'", "'case'", "'default'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "Import", "Function", 
		"Global", "Const", "AiLocal", "AiGlobal", "Bit", "Enum", "Out", "Local", 
		"Count", "If", "Else", "For", "While", "Break", "Continue", "Return", 
		"Goto", "Switch", "Case", "Default", "BoolLiteral", "IntLiteral", "FloatLiteral", 
		"StringLiteral", "TypeIdentifier", "PrimitiveTypeIdentifier", "Identifier", 
		"Whitespace", "Newline", "BlockComment", "LineComment"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "FlowScript.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static FlowScriptLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,65,594,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,
		5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,
		12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,
		19,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,24,1,
		24,1,25,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,
		29,1,29,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,
		32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,
		34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,
		36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,
		38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,
		41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,
		44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,
		46,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
		48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,
		51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,
		53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,3,54,379,8,54,1,55,1,55,1,55,1,55,
		1,55,1,56,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,57,1,58,1,58,3,58,397,8,
		58,1,59,3,59,400,8,59,1,59,4,59,403,8,59,11,59,12,59,404,1,60,3,60,408,
		8,60,1,60,1,60,4,60,412,8,60,11,60,12,60,413,1,61,3,61,417,8,61,1,61,5,
		61,420,8,61,10,61,12,61,423,9,61,1,61,3,61,426,8,61,1,61,4,61,429,8,61,
		11,61,12,61,430,1,61,1,61,3,61,435,8,61,1,61,4,61,438,8,61,11,61,12,61,
		439,3,61,442,8,61,1,61,3,61,445,8,61,1,62,1,62,1,63,1,63,1,64,1,64,1,64,
		5,64,454,8,64,10,64,12,64,457,9,64,1,64,1,64,1,65,1,65,3,65,463,8,65,1,
		65,1,65,3,65,467,8,65,1,65,1,65,1,65,3,65,472,8,65,1,66,1,66,1,66,1,66,
		1,66,1,66,1,66,1,66,1,66,1,66,1,66,3,66,485,8,66,1,67,1,67,1,67,1,67,1,
		67,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,
		69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,3,69,516,8,69,1,70,
		1,70,3,70,520,8,70,1,70,1,70,1,70,5,70,525,8,70,10,70,12,70,528,9,70,1,
		70,1,70,5,70,532,8,70,10,70,12,70,535,9,70,1,70,1,70,3,70,539,8,70,1,71,
		1,71,1,72,1,72,1,73,1,73,3,73,547,8,73,1,74,1,74,1,74,1,75,1,75,1,76,4,
		76,555,8,76,11,76,12,76,556,1,76,1,76,1,77,1,77,3,77,563,8,77,1,77,3,77,
		566,8,77,1,77,1,77,1,78,1,78,1,78,1,78,5,78,574,8,78,10,78,12,78,577,9,
		78,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,79,1,79,5,79,588,8,79,10,79,12,
		79,591,9,79,1,79,1,79,1,575,0,80,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
		9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,
		21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,
		33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,
		45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,
		0,113,0,115,0,117,56,119,0,121,0,123,57,125,0,127,0,129,58,131,0,133,0,
		135,0,137,59,139,60,141,61,143,0,145,0,147,0,149,0,151,0,153,62,155,63,
		157,64,159,65,1,0,13,2,0,70,70,102,102,2,0,69,69,101,101,2,0,34,34,92,
		92,10,0,34,34,39,39,92,92,97,98,102,102,110,110,114,114,116,116,118,118,
		122,122,1,0,48,50,1,0,96,96,2,0,65,90,97,122,1,0,48,57,2,0,65,70,97,102,
		2,0,88,88,120,120,2,0,43,43,45,45,2,0,9,9,32,32,2,0,10,10,13,13,616,0,
		1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
		0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
		1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
		0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
		1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
		0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
		1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
		0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
		1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
		0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,
		0,0,117,1,0,0,0,0,123,1,0,0,0,0,129,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,
		0,0,141,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,
		0,1,161,1,0,0,0,3,163,1,0,0,0,5,165,1,0,0,0,7,167,1,0,0,0,9,169,1,0,0,
		0,11,171,1,0,0,0,13,173,1,0,0,0,15,175,1,0,0,0,17,177,1,0,0,0,19,179,1,
		0,0,0,21,181,1,0,0,0,23,183,1,0,0,0,25,186,1,0,0,0,27,189,1,0,0,0,29,191,
		1,0,0,0,31,193,1,0,0,0,33,195,1,0,0,0,35,197,1,0,0,0,37,199,1,0,0,0,39,
		201,1,0,0,0,41,203,1,0,0,0,43,205,1,0,0,0,45,208,1,0,0,0,47,211,1,0,0,
		0,49,214,1,0,0,0,51,217,1,0,0,0,53,220,1,0,0,0,55,223,1,0,0,0,57,226,1,
		0,0,0,59,229,1,0,0,0,61,232,1,0,0,0,63,235,1,0,0,0,65,238,1,0,0,0,67,245,
		1,0,0,0,69,254,1,0,0,0,71,261,1,0,0,0,73,267,1,0,0,0,75,276,1,0,0,0,77,
		286,1,0,0,0,79,290,1,0,0,0,81,295,1,0,0,0,83,299,1,0,0,0,85,305,1,0,0,
		0,87,311,1,0,0,0,89,314,1,0,0,0,91,319,1,0,0,0,93,323,1,0,0,0,95,329,1,
		0,0,0,97,335,1,0,0,0,99,344,1,0,0,0,101,351,1,0,0,0,103,356,1,0,0,0,105,
		363,1,0,0,0,107,368,1,0,0,0,109,378,1,0,0,0,111,380,1,0,0,0,113,385,1,
		0,0,0,115,391,1,0,0,0,117,396,1,0,0,0,119,399,1,0,0,0,121,407,1,0,0,0,
		123,416,1,0,0,0,125,446,1,0,0,0,127,448,1,0,0,0,129,450,1,0,0,0,131,471,
		1,0,0,0,133,484,1,0,0,0,135,486,1,0,0,0,137,491,1,0,0,0,139,515,1,0,0,
		0,141,538,1,0,0,0,143,540,1,0,0,0,145,542,1,0,0,0,147,546,1,0,0,0,149,
		548,1,0,0,0,151,551,1,0,0,0,153,554,1,0,0,0,155,565,1,0,0,0,157,569,1,
		0,0,0,159,583,1,0,0,0,161,162,5,40,0,0,162,2,1,0,0,0,163,164,5,41,0,0,
		164,4,1,0,0,0,165,166,5,59,0,0,166,6,1,0,0,0,167,168,5,123,0,0,168,8,1,
		0,0,0,169,170,5,125,0,0,170,10,1,0,0,0,171,172,5,61,0,0,172,12,1,0,0,0,
		173,174,5,91,0,0,174,14,1,0,0,0,175,176,5,93,0,0,176,16,1,0,0,0,177,178,
		5,44,0,0,178,18,1,0,0,0,179,180,5,58,0,0,180,20,1,0,0,0,181,182,5,46,0,
		0,182,22,1,0,0,0,183,184,5,45,0,0,184,185,5,45,0,0,185,24,1,0,0,0,186,
		187,5,43,0,0,187,188,5,43,0,0,188,26,1,0,0,0,189,190,5,33,0,0,190,28,1,
		0,0,0,191,192,5,45,0,0,192,30,1,0,0,0,193,194,5,42,0,0,194,32,1,0,0,0,
		195,196,5,47,0,0,196,34,1,0,0,0,197,198,5,37,0,0,198,36,1,0,0,0,199,200,
		5,43,0,0,200,38,1,0,0,0,201,202,5,60,0,0,202,40,1,0,0,0,203,204,5,62,0,
		0,204,42,1,0,0,0,205,206,5,60,0,0,206,207,5,61,0,0,207,44,1,0,0,0,208,
		209,5,62,0,0,209,210,5,61,0,0,210,46,1,0,0,0,211,212,5,61,0,0,212,213,
		5,61,0,0,213,48,1,0,0,0,214,215,5,33,0,0,215,216,5,61,0,0,216,50,1,0,0,
		0,217,218,5,38,0,0,218,219,5,38,0,0,219,52,1,0,0,0,220,221,5,124,0,0,221,
		222,5,124,0,0,222,54,1,0,0,0,223,224,5,43,0,0,224,225,5,61,0,0,225,56,
		1,0,0,0,226,227,5,45,0,0,227,228,5,61,0,0,228,58,1,0,0,0,229,230,5,42,
		0,0,230,231,5,61,0,0,231,60,1,0,0,0,232,233,5,47,0,0,233,234,5,61,0,0,
		234,62,1,0,0,0,235,236,5,37,0,0,236,237,5,61,0,0,237,64,1,0,0,0,238,239,
		5,105,0,0,239,240,5,109,0,0,240,241,5,112,0,0,241,242,5,111,0,0,242,243,
		5,114,0,0,243,244,5,116,0,0,244,66,1,0,0,0,245,246,5,102,0,0,246,247,5,
		117,0,0,247,248,5,110,0,0,248,249,5,99,0,0,249,250,5,116,0,0,250,251,5,
		105,0,0,251,252,5,111,0,0,252,253,5,110,0,0,253,68,1,0,0,0,254,255,5,103,
		0,0,255,256,5,108,0,0,256,257,5,111,0,0,257,258,5,98,0,0,258,259,5,97,
		0,0,259,260,5,108,0,0,260,70,1,0,0,0,261,262,5,99,0,0,262,263,5,111,0,
		0,263,264,5,110,0,0,264,265,5,115,0,0,265,266,5,116,0,0,266,72,1,0,0,0,
		267,268,5,97,0,0,268,269,5,105,0,0,269,270,5,95,0,0,270,271,5,108,0,0,
		271,272,5,111,0,0,272,273,5,99,0,0,273,274,5,97,0,0,274,275,5,108,0,0,
		275,74,1,0,0,0,276,277,5,97,0,0,277,278,5,105,0,0,278,279,5,95,0,0,279,
		280,5,103,0,0,280,281,5,108,0,0,281,282,5,111,0,0,282,283,5,98,0,0,283,
		284,5,97,0,0,284,285,5,108,0,0,285,76,1,0,0,0,286,287,5,98,0,0,287,288,
		5,105,0,0,288,289,5,116,0,0,289,78,1,0,0,0,290,291,5,101,0,0,291,292,5,
		110,0,0,292,293,5,117,0,0,293,294,5,109,0,0,294,80,1,0,0,0,295,296,5,111,
		0,0,296,297,5,117,0,0,297,298,5,116,0,0,298,82,1,0,0,0,299,300,5,108,0,
		0,300,301,5,111,0,0,301,302,5,99,0,0,302,303,5,97,0,0,303,304,5,108,0,
		0,304,84,1,0,0,0,305,306,5,99,0,0,306,307,5,111,0,0,307,308,5,117,0,0,
		308,309,5,110,0,0,309,310,5,116,0,0,310,86,1,0,0,0,311,312,5,105,0,0,312,
		313,5,102,0,0,313,88,1,0,0,0,314,315,5,101,0,0,315,316,5,108,0,0,316,317,
		5,115,0,0,317,318,5,101,0,0,318,90,1,0,0,0,319,320,5,102,0,0,320,321,5,
		111,0,0,321,322,5,114,0,0,322,92,1,0,0,0,323,324,5,119,0,0,324,325,5,104,
		0,0,325,326,5,105,0,0,326,327,5,108,0,0,327,328,5,101,0,0,328,94,1,0,0,
		0,329,330,5,98,0,0,330,331,5,114,0,0,331,332,5,101,0,0,332,333,5,97,0,
		0,333,334,5,107,0,0,334,96,1,0,0,0,335,336,5,99,0,0,336,337,5,111,0,0,
		337,338,5,110,0,0,338,339,5,116,0,0,339,340,5,105,0,0,340,341,5,110,0,
		0,341,342,5,117,0,0,342,343,5,101,0,0,343,98,1,0,0,0,344,345,5,114,0,0,
		345,346,5,101,0,0,346,347,5,116,0,0,347,348,5,117,0,0,348,349,5,114,0,
		0,349,350,5,110,0,0,350,100,1,0,0,0,351,352,5,103,0,0,352,353,5,111,0,
		0,353,354,5,116,0,0,354,355,5,111,0,0,355,102,1,0,0,0,356,357,5,115,0,
		0,357,358,5,119,0,0,358,359,5,105,0,0,359,360,5,116,0,0,360,361,5,99,0,
		0,361,362,5,104,0,0,362,104,1,0,0,0,363,364,5,99,0,0,364,365,5,97,0,0,
		365,366,5,115,0,0,366,367,5,101,0,0,367,106,1,0,0,0,368,369,5,100,0,0,
		369,370,5,101,0,0,370,371,5,102,0,0,371,372,5,97,0,0,372,373,5,117,0,0,
		373,374,5,108,0,0,374,375,5,116,0,0,375,108,1,0,0,0,376,379,3,111,55,0,
		377,379,3,113,56,0,378,376,1,0,0,0,378,377,1,0,0,0,379,110,1,0,0,0,380,
		381,5,116,0,0,381,382,5,114,0,0,382,383,5,117,0,0,383,384,5,101,0,0,384,
		112,1,0,0,0,385,386,5,102,0,0,386,387,5,97,0,0,387,388,5,108,0,0,388,389,
		5,115,0,0,389,390,5,101,0,0,390,114,1,0,0,0,391,392,5,96,0,0,392,393,5,
		96,0,0,393,116,1,0,0,0,394,397,3,119,59,0,395,397,3,121,60,0,396,394,1,
		0,0,0,396,395,1,0,0,0,397,118,1,0,0,0,398,400,3,151,75,0,399,398,1,0,0,
		0,399,400,1,0,0,0,400,402,1,0,0,0,401,403,3,145,72,0,402,401,1,0,0,0,403,
		404,1,0,0,0,404,402,1,0,0,0,404,405,1,0,0,0,405,120,1,0,0,0,406,408,3,
		151,75,0,407,406,1,0,0,0,407,408,1,0,0,0,408,409,1,0,0,0,409,411,3,149,
		74,0,410,412,3,147,73,0,411,410,1,0,0,0,412,413,1,0,0,0,413,411,1,0,0,
		0,413,414,1,0,0,0,414,122,1,0,0,0,415,417,3,151,75,0,416,415,1,0,0,0,416,
		417,1,0,0,0,417,421,1,0,0,0,418,420,3,145,72,0,419,418,1,0,0,0,420,423,
		1,0,0,0,421,419,1,0,0,0,421,422,1,0,0,0,422,425,1,0,0,0,423,421,1,0,0,
		0,424,426,5,46,0,0,425,424,1,0,0,0,425,426,1,0,0,0,426,428,1,0,0,0,427,
		429,3,145,72,0,428,427,1,0,0,0,429,430,1,0,0,0,430,428,1,0,0,0,430,431,
		1,0,0,0,431,441,1,0,0,0,432,434,3,127,63,0,433,435,3,151,75,0,434,433,
		1,0,0,0,434,435,1,0,0,0,435,437,1,0,0,0,436,438,3,145,72,0,437,436,1,0,
		0,0,438,439,1,0,0,0,439,437,1,0,0,0,439,440,1,0,0,0,440,442,1,0,0,0,441,
		432,1,0,0,0,441,442,1,0,0,0,442,444,1,0,0,0,443,445,3,125,62,0,444,443,
		1,0,0,0,444,445,1,0,0,0,445,124,1,0,0,0,446,447,7,0,0,0,447,126,1,0,0,
		0,448,449,7,1,0,0,449,128,1,0,0,0,450,455,5,34,0,0,451,454,3,131,65,0,
		452,454,8,2,0,0,453,451,1,0,0,0,453,452,1,0,0,0,454,457,1,0,0,0,455,453,
		1,0,0,0,455,456,1,0,0,0,456,458,1,0,0,0,457,455,1,0,0,0,458,459,5,34,0,
		0,459,130,1,0,0,0,460,462,5,92,0,0,461,463,7,3,0,0,462,461,1,0,0,0,463,
		472,1,0,0,0,464,466,5,92,0,0,465,467,5,13,0,0,466,465,1,0,0,0,466,467,
		1,0,0,0,467,468,1,0,0,0,468,472,5,10,0,0,469,472,3,133,66,0,470,472,3,
		135,67,0,471,460,1,0,0,0,471,464,1,0,0,0,471,469,1,0,0,0,471,470,1,0,0,
		0,472,132,1,0,0,0,473,474,5,92,0,0,474,485,3,145,72,0,475,476,5,92,0,0,
		476,477,3,145,72,0,477,478,3,145,72,0,478,485,1,0,0,0,479,480,5,92,0,0,
		480,481,7,4,0,0,481,482,3,145,72,0,482,483,3,145,72,0,483,485,1,0,0,0,
		484,473,1,0,0,0,484,475,1,0,0,0,484,479,1,0,0,0,485,134,1,0,0,0,486,487,
		5,92,0,0,487,488,5,120,0,0,488,489,3,147,73,0,489,490,3,147,73,0,490,136,
		1,0,0,0,491,492,3,139,69,0,492,138,1,0,0,0,493,494,5,98,0,0,494,495,5,
		111,0,0,495,496,5,111,0,0,496,516,5,108,0,0,497,498,5,105,0,0,498,499,
		5,110,0,0,499,516,5,116,0,0,500,501,5,102,0,0,501,502,5,108,0,0,502,503,
		5,111,0,0,503,504,5,97,0,0,504,516,5,116,0,0,505,506,5,115,0,0,506,507,
		5,116,0,0,507,508,5,114,0,0,508,509,5,105,0,0,509,510,5,110,0,0,510,516,
		5,103,0,0,511,512,5,118,0,0,512,513,5,111,0,0,513,514,5,105,0,0,514,516,
		5,100,0,0,515,493,1,0,0,0,515,497,1,0,0,0,515,500,1,0,0,0,515,505,1,0,
		0,0,515,511,1,0,0,0,516,140,1,0,0,0,517,520,3,143,71,0,518,520,5,95,0,
		0,519,517,1,0,0,0,519,518,1,0,0,0,520,526,1,0,0,0,521,525,3,143,71,0,522,
		525,5,95,0,0,523,525,3,145,72,0,524,521,1,0,0,0,524,522,1,0,0,0,524,523,
		1,0,0,0,525,528,1,0,0,0,526,524,1,0,0,0,526,527,1,0,0,0,527,539,1,0,0,
		0,528,526,1,0,0,0,529,533,3,115,57,0,530,532,8,5,0,0,531,530,1,0,0,0,532,
		535,1,0,0,0,533,531,1,0,0,0,533,534,1,0,0,0,534,536,1,0,0,0,535,533,1,
		0,0,0,536,537,3,115,57,0,537,539,1,0,0,0,538,519,1,0,0,0,538,529,1,0,0,
		0,539,142,1,0,0,0,540,541,7,6,0,0,541,144,1,0,0,0,542,543,7,7,0,0,543,
		146,1,0,0,0,544,547,3,145,72,0,545,547,7,8,0,0,546,544,1,0,0,0,546,545,
		1,0,0,0,547,148,1,0,0,0,548,549,5,48,0,0,549,550,7,9,0,0,550,150,1,0,0,
		0,551,552,7,10,0,0,552,152,1,0,0,0,553,555,7,11,0,0,554,553,1,0,0,0,555,
		556,1,0,0,0,556,554,1,0,0,0,556,557,1,0,0,0,557,558,1,0,0,0,558,559,6,
		76,0,0,559,154,1,0,0,0,560,562,5,13,0,0,561,563,5,10,0,0,562,561,1,0,0,
		0,562,563,1,0,0,0,563,566,1,0,0,0,564,566,5,10,0,0,565,560,1,0,0,0,565,
		564,1,0,0,0,566,567,1,0,0,0,567,568,6,77,0,0,568,156,1,0,0,0,569,570,5,
		47,0,0,570,571,5,42,0,0,571,575,1,0,0,0,572,574,9,0,0,0,573,572,1,0,0,
		0,574,577,1,0,0,0,575,576,1,0,0,0,575,573,1,0,0,0,576,578,1,0,0,0,577,
		575,1,0,0,0,578,579,5,42,0,0,579,580,5,47,0,0,580,581,1,0,0,0,581,582,
		6,78,0,0,582,158,1,0,0,0,583,584,5,47,0,0,584,585,5,47,0,0,585,589,1,0,
		0,0,586,588,8,12,0,0,587,586,1,0,0,0,588,591,1,0,0,0,589,587,1,0,0,0,589,
		590,1,0,0,0,590,592,1,0,0,0,591,589,1,0,0,0,592,593,6,79,0,0,593,160,1,
		0,0,0,33,0,378,396,399,404,407,413,416,421,425,430,434,439,441,444,453,
		455,462,466,471,484,515,519,524,526,533,538,546,556,562,565,575,589,1,
		6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace AtlusScriptLibrary.FlowScriptLanguage.Compiler.Parser.Grammar
